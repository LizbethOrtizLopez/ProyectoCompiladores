Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> stmts
Rule 2     stmts -> statement stmts
Rule 3     stmts -> statement
Rule 4     statement -> INTDCL NAME ;
Rule 5     statement -> INTDCL NAME = expression ;
Rule 6     statement -> FLOATDCL NAME ;
Rule 7     statement -> FLOATDCL NAME = expression ;
Rule 8     statement -> BOOLDCL NAME ;
Rule 9     statement -> BOOLDCL NAME = boolexp ;
Rule 10    statement -> PRINT expression ;
Rule 11    statement -> IF ( boolexp ) { stmts }
Rule 12    statement -> IF ( boolexp ) { stmts } ELSE { stmts }
Rule 13    statement -> NAME = expression ;
Rule 14    expression -> ( expression )
Rule 15    expression -> expression + expression
Rule 16    expression -> expression - expression
Rule 17    expression -> expression * expression
Rule 18    expression -> expression / expression
Rule 19    expression -> expression ^ expression
Rule 20    boolexp -> expression GT expression
Rule 21    boolexp -> expression LT expression
Rule 22    boolexp -> expression GE expression
Rule 23    boolexp -> expression LE expression
Rule 24    boolexp -> expression EQ expression
Rule 25    boolexp -> expression NE expression
Rule 26    expression -> INUMBER
Rule 27    expression -> FNUMBER
Rule 28    expression -> boolexp
Rule 29    boolexp -> BOOLVAL
Rule 30    expression -> NAME

Terminals, with rules where they appear

(                    : 11 12 14
)                    : 11 12 14
*                    : 17
+                    : 15
-                    : 16
/                    : 18
;                    : 4 5 6 7 8 9 10 13
=                    : 5 7 9 13
BOOLDCL              : 8 9
BOOLVAL              : 29
ELSE                 : 12
EQ                   : 24
FLOATDCL             : 6 7
FNUMBER              : 27
GE                   : 22
GT                   : 20
IF                   : 11 12
INTDCL               : 4 5
INUMBER              : 26
LE                   : 23
LT                   : 21
NAME                 : 4 5 6 7 8 9 13 30
NE                   : 25
PRINT                : 10
^                    : 19
error                : 
{                    : 11 12 12
}                    : 11 12 12

Nonterminals, with rules where they appear

boolexp              : 9 11 12 28
expression           : 5 7 10 13 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25
prog                 : 0
statement            : 2 3
stmts                : 1 2 11 12 12

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . stmts
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . PRINT expression ;
    (11) statement -> . IF ( boolexp ) { stmts }
    (12) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (13) statement -> . NAME = expression ;

    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9
    NAME            shift and go to state 5

    prog                           shift and go to state 1
    stmts                          shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> prog .



state 2

    (1) prog -> stmts .

    $end            reduce using rule 1 (prog -> stmts .)


state 3

    (2) stmts -> statement . stmts
    (3) stmts -> statement .
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . PRINT expression ;
    (11) statement -> . IF ( boolexp ) { stmts }
    (12) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (13) statement -> . NAME = expression ;

    $end            reduce using rule 3 (stmts -> statement .)
    }               reduce using rule 3 (stmts -> statement .)
    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9
    NAME            shift and go to state 5

    statement                      shift and go to state 3
    stmts                          shift and go to state 10

state 4

    (4) statement -> INTDCL . NAME ;
    (5) statement -> INTDCL . NAME = expression ;

    NAME            shift and go to state 11


state 5

    (13) statement -> NAME . = expression ;

    =               shift and go to state 12


state 6

    (6) statement -> FLOATDCL . NAME ;
    (7) statement -> FLOATDCL . NAME = expression ;

    NAME            shift and go to state 13


state 7

    (8) statement -> BOOLDCL . NAME ;
    (9) statement -> BOOLDCL . NAME = boolexp ;

    NAME            shift and go to state 14


state 8

    (10) statement -> PRINT . expression ;
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 15
    boolexp                        shift and go to state 19

state 9

    (11) statement -> IF . ( boolexp ) { stmts }
    (12) statement -> IF . ( boolexp ) { stmts } ELSE { stmts }

    (               shift and go to state 22


state 10

    (2) stmts -> statement stmts .

    $end            reduce using rule 2 (stmts -> statement stmts .)
    }               reduce using rule 2 (stmts -> statement stmts .)


state 11

    (4) statement -> INTDCL NAME . ;
    (5) statement -> INTDCL NAME . = expression ;

    ;               shift and go to state 23
    =               shift and go to state 24


state 12

    (13) statement -> NAME = . expression ;
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 25
    boolexp                        shift and go to state 19

state 13

    (6) statement -> FLOATDCL NAME . ;
    (7) statement -> FLOATDCL NAME . = expression ;

    ;               shift and go to state 26
    =               shift and go to state 27


state 14

    (8) statement -> BOOLDCL NAME . ;
    (9) statement -> BOOLDCL NAME . = boolexp ;

    ;               shift and go to state 28
    =               shift and go to state 29


state 15

    (10) statement -> PRINT expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

    ;               shift and go to state 30
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 16

    (14) expression -> ( . expression )
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 42
    boolexp                        shift and go to state 19

state 17

    (26) expression -> INUMBER .

    ;               reduce using rule 26 (expression -> INUMBER .)
    +               reduce using rule 26 (expression -> INUMBER .)
    -               reduce using rule 26 (expression -> INUMBER .)
    *               reduce using rule 26 (expression -> INUMBER .)
    /               reduce using rule 26 (expression -> INUMBER .)
    ^               reduce using rule 26 (expression -> INUMBER .)
    GT              reduce using rule 26 (expression -> INUMBER .)
    LT              reduce using rule 26 (expression -> INUMBER .)
    GE              reduce using rule 26 (expression -> INUMBER .)
    LE              reduce using rule 26 (expression -> INUMBER .)
    EQ              reduce using rule 26 (expression -> INUMBER .)
    NE              reduce using rule 26 (expression -> INUMBER .)
    )               reduce using rule 26 (expression -> INUMBER .)


state 18

    (27) expression -> FNUMBER .

    ;               reduce using rule 27 (expression -> FNUMBER .)
    +               reduce using rule 27 (expression -> FNUMBER .)
    -               reduce using rule 27 (expression -> FNUMBER .)
    *               reduce using rule 27 (expression -> FNUMBER .)
    /               reduce using rule 27 (expression -> FNUMBER .)
    ^               reduce using rule 27 (expression -> FNUMBER .)
    GT              reduce using rule 27 (expression -> FNUMBER .)
    LT              reduce using rule 27 (expression -> FNUMBER .)
    GE              reduce using rule 27 (expression -> FNUMBER .)
    LE              reduce using rule 27 (expression -> FNUMBER .)
    EQ              reduce using rule 27 (expression -> FNUMBER .)
    NE              reduce using rule 27 (expression -> FNUMBER .)
    )               reduce using rule 27 (expression -> FNUMBER .)


state 19

    (28) expression -> boolexp .

    ;               reduce using rule 28 (expression -> boolexp .)
    +               reduce using rule 28 (expression -> boolexp .)
    -               reduce using rule 28 (expression -> boolexp .)
    *               reduce using rule 28 (expression -> boolexp .)
    /               reduce using rule 28 (expression -> boolexp .)
    ^               reduce using rule 28 (expression -> boolexp .)
    GT              reduce using rule 28 (expression -> boolexp .)
    LT              reduce using rule 28 (expression -> boolexp .)
    GE              reduce using rule 28 (expression -> boolexp .)
    LE              reduce using rule 28 (expression -> boolexp .)
    EQ              reduce using rule 28 (expression -> boolexp .)
    NE              reduce using rule 28 (expression -> boolexp .)
    )               reduce using rule 28 (expression -> boolexp .)


state 20

    (30) expression -> NAME .

    ;               reduce using rule 30 (expression -> NAME .)
    +               reduce using rule 30 (expression -> NAME .)
    -               reduce using rule 30 (expression -> NAME .)
    *               reduce using rule 30 (expression -> NAME .)
    /               reduce using rule 30 (expression -> NAME .)
    ^               reduce using rule 30 (expression -> NAME .)
    GT              reduce using rule 30 (expression -> NAME .)
    LT              reduce using rule 30 (expression -> NAME .)
    GE              reduce using rule 30 (expression -> NAME .)
    LE              reduce using rule 30 (expression -> NAME .)
    EQ              reduce using rule 30 (expression -> NAME .)
    NE              reduce using rule 30 (expression -> NAME .)
    )               reduce using rule 30 (expression -> NAME .)


state 21

    (29) boolexp -> BOOLVAL .

    ;               reduce using rule 29 (boolexp -> BOOLVAL .)
    +               reduce using rule 29 (boolexp -> BOOLVAL .)
    -               reduce using rule 29 (boolexp -> BOOLVAL .)
    *               reduce using rule 29 (boolexp -> BOOLVAL .)
    /               reduce using rule 29 (boolexp -> BOOLVAL .)
    ^               reduce using rule 29 (boolexp -> BOOLVAL .)
    GT              reduce using rule 29 (boolexp -> BOOLVAL .)
    LT              reduce using rule 29 (boolexp -> BOOLVAL .)
    GE              reduce using rule 29 (boolexp -> BOOLVAL .)
    LE              reduce using rule 29 (boolexp -> BOOLVAL .)
    EQ              reduce using rule 29 (boolexp -> BOOLVAL .)
    NE              reduce using rule 29 (boolexp -> BOOLVAL .)
    )               reduce using rule 29 (boolexp -> BOOLVAL .)


state 22

    (11) statement -> IF ( . boolexp ) { stmts }
    (12) statement -> IF ( . boolexp ) { stmts } ELSE { stmts }
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME

    BOOLVAL         shift and go to state 21
    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20

    boolexp                        shift and go to state 43
    expression                     shift and go to state 44

state 23

    (4) statement -> INTDCL NAME ; .

    INTDCL          reduce using rule 4 (statement -> INTDCL NAME ; .)
    FLOATDCL        reduce using rule 4 (statement -> INTDCL NAME ; .)
    BOOLDCL         reduce using rule 4 (statement -> INTDCL NAME ; .)
    PRINT           reduce using rule 4 (statement -> INTDCL NAME ; .)
    IF              reduce using rule 4 (statement -> INTDCL NAME ; .)
    NAME            reduce using rule 4 (statement -> INTDCL NAME ; .)
    $end            reduce using rule 4 (statement -> INTDCL NAME ; .)
    }               reduce using rule 4 (statement -> INTDCL NAME ; .)


state 24

    (5) statement -> INTDCL NAME = . expression ;
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 45
    boolexp                        shift and go to state 19

state 25

    (13) statement -> NAME = expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

    ;               shift and go to state 46
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 26

    (6) statement -> FLOATDCL NAME ; .

    INTDCL          reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    FLOATDCL        reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    BOOLDCL         reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    PRINT           reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    IF              reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    NAME            reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    $end            reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    }               reduce using rule 6 (statement -> FLOATDCL NAME ; .)


state 27

    (7) statement -> FLOATDCL NAME = . expression ;
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 47
    boolexp                        shift and go to state 19

state 28

    (8) statement -> BOOLDCL NAME ; .

    INTDCL          reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    FLOATDCL        reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    BOOLDCL         reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    PRINT           reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    IF              reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    NAME            reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    $end            reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    }               reduce using rule 8 (statement -> BOOLDCL NAME ; .)


state 29

    (9) statement -> BOOLDCL NAME = . boolexp ;
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME

    BOOLVAL         shift and go to state 21
    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20

    boolexp                        shift and go to state 48
    expression                     shift and go to state 44

state 30

    (10) statement -> PRINT expression ; .

    INTDCL          reduce using rule 10 (statement -> PRINT expression ; .)
    FLOATDCL        reduce using rule 10 (statement -> PRINT expression ; .)
    BOOLDCL         reduce using rule 10 (statement -> PRINT expression ; .)
    PRINT           reduce using rule 10 (statement -> PRINT expression ; .)
    IF              reduce using rule 10 (statement -> PRINT expression ; .)
    NAME            reduce using rule 10 (statement -> PRINT expression ; .)
    $end            reduce using rule 10 (statement -> PRINT expression ; .)
    }               reduce using rule 10 (statement -> PRINT expression ; .)


state 31

    (15) expression -> expression + . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 49
    boolexp                        shift and go to state 19

state 32

    (16) expression -> expression - . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 50
    boolexp                        shift and go to state 19

state 33

    (17) expression -> expression * . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 51
    boolexp                        shift and go to state 19

state 34

    (18) expression -> expression / . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 52
    boolexp                        shift and go to state 19

state 35

    (19) expression -> expression ^ . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 53
    boolexp                        shift and go to state 19

state 36

    (20) boolexp -> expression GT . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 54
    boolexp                        shift and go to state 19

state 37

    (21) boolexp -> expression LT . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 55
    boolexp                        shift and go to state 19

state 38

    (22) boolexp -> expression GE . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 56
    boolexp                        shift and go to state 19

state 39

    (23) boolexp -> expression LE . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 57
    boolexp                        shift and go to state 19

state 40

    (24) boolexp -> expression EQ . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 58
    boolexp                        shift and go to state 19

state 41

    (25) boolexp -> expression NE . expression
    (14) expression -> . ( expression )
    (15) expression -> . expression + expression
    (16) expression -> . expression - expression
    (17) expression -> . expression * expression
    (18) expression -> . expression / expression
    (19) expression -> . expression ^ expression
    (26) expression -> . INUMBER
    (27) expression -> . FNUMBER
    (28) expression -> . boolexp
    (30) expression -> . NAME
    (20) boolexp -> . expression GT expression
    (21) boolexp -> . expression LT expression
    (22) boolexp -> . expression GE expression
    (23) boolexp -> . expression LE expression
    (24) boolexp -> . expression EQ expression
    (25) boolexp -> . expression NE expression
    (29) boolexp -> . BOOLVAL

    (               shift and go to state 16
    INUMBER         shift and go to state 17
    FNUMBER         shift and go to state 18
    NAME            shift and go to state 20
    BOOLVAL         shift and go to state 21

    expression                     shift and go to state 59
    boolexp                        shift and go to state 19

state 42

    (14) expression -> ( expression . )
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

    )               shift and go to state 60
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 43

    (11) statement -> IF ( boolexp . ) { stmts }
    (12) statement -> IF ( boolexp . ) { stmts } ELSE { stmts }
    (28) expression -> boolexp .

    )               shift and go to state 61
    GT              reduce using rule 28 (expression -> boolexp .)
    LT              reduce using rule 28 (expression -> boolexp .)
    GE              reduce using rule 28 (expression -> boolexp .)
    LE              reduce using rule 28 (expression -> boolexp .)
    EQ              reduce using rule 28 (expression -> boolexp .)
    NE              reduce using rule 28 (expression -> boolexp .)
    +               reduce using rule 28 (expression -> boolexp .)
    -               reduce using rule 28 (expression -> boolexp .)
    *               reduce using rule 28 (expression -> boolexp .)
    /               reduce using rule 28 (expression -> boolexp .)
    ^               reduce using rule 28 (expression -> boolexp .)


state 44

    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression

    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35


state 45

    (5) statement -> INTDCL NAME = expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

    ;               shift and go to state 62
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 46

    (13) statement -> NAME = expression ; .

    INTDCL          reduce using rule 13 (statement -> NAME = expression ; .)
    FLOATDCL        reduce using rule 13 (statement -> NAME = expression ; .)
    BOOLDCL         reduce using rule 13 (statement -> NAME = expression ; .)
    PRINT           reduce using rule 13 (statement -> NAME = expression ; .)
    IF              reduce using rule 13 (statement -> NAME = expression ; .)
    NAME            reduce using rule 13 (statement -> NAME = expression ; .)
    $end            reduce using rule 13 (statement -> NAME = expression ; .)
    }               reduce using rule 13 (statement -> NAME = expression ; .)


state 47

    (7) statement -> FLOATDCL NAME = expression . ;
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

    ;               shift and go to state 63
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41


state 48

    (9) statement -> BOOLDCL NAME = boolexp . ;
    (28) expression -> boolexp .

    ;               shift and go to state 64
    GT              reduce using rule 28 (expression -> boolexp .)
    LT              reduce using rule 28 (expression -> boolexp .)
    GE              reduce using rule 28 (expression -> boolexp .)
    LE              reduce using rule 28 (expression -> boolexp .)
    EQ              reduce using rule 28 (expression -> boolexp .)
    NE              reduce using rule 28 (expression -> boolexp .)
    +               reduce using rule 28 (expression -> boolexp .)
    -               reduce using rule 28 (expression -> boolexp .)
    *               reduce using rule 28 (expression -> boolexp .)
    /               reduce using rule 28 (expression -> boolexp .)
    ^               reduce using rule 28 (expression -> boolexp .)


state 49

    (15) expression -> expression + expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 15 (expression -> expression + expression .)
    )               reduce using rule 15 (expression -> expression + expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 15 (expression -> expression + expression .) ]
  ! -               [ reduce using rule 15 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 15 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 15 (expression -> expression + expression .) ]
  ! ^               [ reduce using rule 15 (expression -> expression + expression .) ]
  ! GT              [ reduce using rule 15 (expression -> expression + expression .) ]
  ! LT              [ reduce using rule 15 (expression -> expression + expression .) ]
  ! GE              [ reduce using rule 15 (expression -> expression + expression .) ]
  ! LE              [ reduce using rule 15 (expression -> expression + expression .) ]
  ! EQ              [ reduce using rule 15 (expression -> expression + expression .) ]
  ! NE              [ reduce using rule 15 (expression -> expression + expression .) ]


state 50

    (16) expression -> expression - expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 16 (expression -> expression - expression .)
    )               reduce using rule 16 (expression -> expression - expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 16 (expression -> expression - expression .) ]
  ! -               [ reduce using rule 16 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 16 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 16 (expression -> expression - expression .) ]
  ! ^               [ reduce using rule 16 (expression -> expression - expression .) ]
  ! GT              [ reduce using rule 16 (expression -> expression - expression .) ]
  ! LT              [ reduce using rule 16 (expression -> expression - expression .) ]
  ! GE              [ reduce using rule 16 (expression -> expression - expression .) ]
  ! LE              [ reduce using rule 16 (expression -> expression - expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression - expression .) ]
  ! NE              [ reduce using rule 16 (expression -> expression - expression .) ]


state 51

    (17) expression -> expression * expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 17 (expression -> expression * expression .)
    )               reduce using rule 17 (expression -> expression * expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 17 (expression -> expression * expression .) ]
  ! -               [ reduce using rule 17 (expression -> expression * expression .) ]
  ! *               [ reduce using rule 17 (expression -> expression * expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression * expression .) ]
  ! ^               [ reduce using rule 17 (expression -> expression * expression .) ]
  ! GT              [ reduce using rule 17 (expression -> expression * expression .) ]
  ! LT              [ reduce using rule 17 (expression -> expression * expression .) ]
  ! GE              [ reduce using rule 17 (expression -> expression * expression .) ]
  ! LE              [ reduce using rule 17 (expression -> expression * expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> expression * expression .) ]
  ! NE              [ reduce using rule 17 (expression -> expression * expression .) ]


state 52

    (18) expression -> expression / expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 18 (expression -> expression / expression .)
    )               reduce using rule 18 (expression -> expression / expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 18 (expression -> expression / expression .) ]
  ! -               [ reduce using rule 18 (expression -> expression / expression .) ]
  ! *               [ reduce using rule 18 (expression -> expression / expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression / expression .) ]
  ! ^               [ reduce using rule 18 (expression -> expression / expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression / expression .) ]
  ! LT              [ reduce using rule 18 (expression -> expression / expression .) ]
  ! GE              [ reduce using rule 18 (expression -> expression / expression .) ]
  ! LE              [ reduce using rule 18 (expression -> expression / expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression / expression .) ]
  ! NE              [ reduce using rule 18 (expression -> expression / expression .) ]


state 53

    (19) expression -> expression ^ expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 19 (expression -> expression ^ expression .)
    )               reduce using rule 19 (expression -> expression ^ expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! -               [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! *               [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! ^               [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression ^ expression .) ]
  ! NE              [ reduce using rule 19 (expression -> expression ^ expression .) ]


state 54

    (20) boolexp -> expression GT expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 20 (boolexp -> expression GT expression .)
    )               reduce using rule 20 (boolexp -> expression GT expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! -               [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! *               [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! /               [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! ^               [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! GT              [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! LT              [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! GE              [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! LE              [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! EQ              [ reduce using rule 20 (boolexp -> expression GT expression .) ]
  ! NE              [ reduce using rule 20 (boolexp -> expression GT expression .) ]


state 55

    (21) boolexp -> expression LT expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 21 (boolexp -> expression LT expression .)
    )               reduce using rule 21 (boolexp -> expression LT expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! -               [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! *               [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! /               [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! ^               [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! GT              [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! LT              [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! GE              [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! LE              [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! EQ              [ reduce using rule 21 (boolexp -> expression LT expression .) ]
  ! NE              [ reduce using rule 21 (boolexp -> expression LT expression .) ]


state 56

    (22) boolexp -> expression GE expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 22 (boolexp -> expression GE expression .)
    )               reduce using rule 22 (boolexp -> expression GE expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! -               [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! *               [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! /               [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! ^               [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! GT              [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! LT              [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! GE              [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! LE              [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! EQ              [ reduce using rule 22 (boolexp -> expression GE expression .) ]
  ! NE              [ reduce using rule 22 (boolexp -> expression GE expression .) ]


state 57

    (23) boolexp -> expression LE expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 23 (boolexp -> expression LE expression .)
    )               reduce using rule 23 (boolexp -> expression LE expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! -               [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! *               [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! /               [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! ^               [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! GT              [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! LT              [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! GE              [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! LE              [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! EQ              [ reduce using rule 23 (boolexp -> expression LE expression .) ]
  ! NE              [ reduce using rule 23 (boolexp -> expression LE expression .) ]


state 58

    (24) boolexp -> expression EQ expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 24 (boolexp -> expression EQ expression .)
    )               reduce using rule 24 (boolexp -> expression EQ expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! -               [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! *               [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! /               [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! ^               [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! GT              [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! LT              [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! GE              [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! LE              [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 24 (boolexp -> expression EQ expression .) ]
  ! NE              [ reduce using rule 24 (boolexp -> expression EQ expression .) ]


state 59

    (25) boolexp -> expression NE expression .
    (15) expression -> expression . + expression
    (16) expression -> expression . - expression
    (17) expression -> expression . * expression
    (18) expression -> expression . / expression
    (19) expression -> expression . ^ expression
    (20) boolexp -> expression . GT expression
    (21) boolexp -> expression . LT expression
    (22) boolexp -> expression . GE expression
    (23) boolexp -> expression . LE expression
    (24) boolexp -> expression . EQ expression
    (25) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 25 (boolexp -> expression NE expression .)
    )               reduce using rule 25 (boolexp -> expression NE expression .)
    +               shift and go to state 31
    -               shift and go to state 32
    *               shift and go to state 33
    /               shift and go to state 34
    ^               shift and go to state 35
    GT              shift and go to state 36
    LT              shift and go to state 37
    GE              shift and go to state 38
    LE              shift and go to state 39
    EQ              shift and go to state 40
    NE              shift and go to state 41

  ! +               [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! -               [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! *               [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! /               [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! ^               [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! GT              [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! LT              [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! GE              [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! LE              [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! EQ              [ reduce using rule 25 (boolexp -> expression NE expression .) ]
  ! NE              [ reduce using rule 25 (boolexp -> expression NE expression .) ]


state 60

    (14) expression -> ( expression ) .

    ;               reduce using rule 14 (expression -> ( expression ) .)
    +               reduce using rule 14 (expression -> ( expression ) .)
    -               reduce using rule 14 (expression -> ( expression ) .)
    *               reduce using rule 14 (expression -> ( expression ) .)
    /               reduce using rule 14 (expression -> ( expression ) .)
    ^               reduce using rule 14 (expression -> ( expression ) .)
    GT              reduce using rule 14 (expression -> ( expression ) .)
    LT              reduce using rule 14 (expression -> ( expression ) .)
    GE              reduce using rule 14 (expression -> ( expression ) .)
    LE              reduce using rule 14 (expression -> ( expression ) .)
    EQ              reduce using rule 14 (expression -> ( expression ) .)
    NE              reduce using rule 14 (expression -> ( expression ) .)
    )               reduce using rule 14 (expression -> ( expression ) .)


state 61

    (11) statement -> IF ( boolexp ) . { stmts }
    (12) statement -> IF ( boolexp ) . { stmts } ELSE { stmts }

    {               shift and go to state 65


state 62

    (5) statement -> INTDCL NAME = expression ; .

    INTDCL          reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    FLOATDCL        reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    BOOLDCL         reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    PRINT           reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    IF              reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    NAME            reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    $end            reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    }               reduce using rule 5 (statement -> INTDCL NAME = expression ; .)


state 63

    (7) statement -> FLOATDCL NAME = expression ; .

    INTDCL          reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    FLOATDCL        reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    BOOLDCL         reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    PRINT           reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    IF              reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    NAME            reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    $end            reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    }               reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)


state 64

    (9) statement -> BOOLDCL NAME = boolexp ; .

    INTDCL          reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    FLOATDCL        reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    BOOLDCL         reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    PRINT           reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    IF              reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    NAME            reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    $end            reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    }               reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)


state 65

    (11) statement -> IF ( boolexp ) { . stmts }
    (12) statement -> IF ( boolexp ) { . stmts } ELSE { stmts }
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . PRINT expression ;
    (11) statement -> . IF ( boolexp ) { stmts }
    (12) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (13) statement -> . NAME = expression ;

    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9
    NAME            shift and go to state 5

    stmts                          shift and go to state 66
    statement                      shift and go to state 3

state 66

    (11) statement -> IF ( boolexp ) { stmts . }
    (12) statement -> IF ( boolexp ) { stmts . } ELSE { stmts }

    }               shift and go to state 67


state 67

    (11) statement -> IF ( boolexp ) { stmts } .
    (12) statement -> IF ( boolexp ) { stmts } . ELSE { stmts }

    INTDCL          reduce using rule 11 (statement -> IF ( boolexp ) { stmts } .)
    FLOATDCL        reduce using rule 11 (statement -> IF ( boolexp ) { stmts } .)
    BOOLDCL         reduce using rule 11 (statement -> IF ( boolexp ) { stmts } .)
    PRINT           reduce using rule 11 (statement -> IF ( boolexp ) { stmts } .)
    IF              reduce using rule 11 (statement -> IF ( boolexp ) { stmts } .)
    NAME            reduce using rule 11 (statement -> IF ( boolexp ) { stmts } .)
    $end            reduce using rule 11 (statement -> IF ( boolexp ) { stmts } .)
    }               reduce using rule 11 (statement -> IF ( boolexp ) { stmts } .)
    ELSE            shift and go to state 68


state 68

    (12) statement -> IF ( boolexp ) { stmts } ELSE . { stmts }

    {               shift and go to state 69


state 69

    (12) statement -> IF ( boolexp ) { stmts } ELSE { . stmts }
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . PRINT expression ;
    (11) statement -> . IF ( boolexp ) { stmts }
    (12) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (13) statement -> . NAME = expression ;

    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    PRINT           shift and go to state 8
    IF              shift and go to state 9
    NAME            shift and go to state 5

    stmts                          shift and go to state 70
    statement                      shift and go to state 3

state 70

    (12) statement -> IF ( boolexp ) { stmts } ELSE { stmts . }

    }               shift and go to state 71


state 71

    (12) statement -> IF ( boolexp ) { stmts } ELSE { stmts } .

    INTDCL          reduce using rule 12 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    FLOATDCL        reduce using rule 12 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    BOOLDCL         reduce using rule 12 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    PRINT           reduce using rule 12 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    IF              reduce using rule 12 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    NAME            reduce using rule 12 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    $end            reduce using rule 12 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    }               reduce using rule 12 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for + in state 49 resolved as shift
WARNING: shift/reduce conflict for - in state 49 resolved as shift
WARNING: shift/reduce conflict for * in state 49 resolved as shift
WARNING: shift/reduce conflict for / in state 49 resolved as shift
WARNING: shift/reduce conflict for ^ in state 49 resolved as shift
WARNING: shift/reduce conflict for GT in state 49 resolved as shift
WARNING: shift/reduce conflict for LT in state 49 resolved as shift
WARNING: shift/reduce conflict for GE in state 49 resolved as shift
WARNING: shift/reduce conflict for LE in state 49 resolved as shift
WARNING: shift/reduce conflict for EQ in state 49 resolved as shift
WARNING: shift/reduce conflict for NE in state 49 resolved as shift
WARNING: shift/reduce conflict for + in state 50 resolved as shift
WARNING: shift/reduce conflict for - in state 50 resolved as shift
WARNING: shift/reduce conflict for * in state 50 resolved as shift
WARNING: shift/reduce conflict for / in state 50 resolved as shift
WARNING: shift/reduce conflict for ^ in state 50 resolved as shift
WARNING: shift/reduce conflict for GT in state 50 resolved as shift
WARNING: shift/reduce conflict for LT in state 50 resolved as shift
WARNING: shift/reduce conflict for GE in state 50 resolved as shift
WARNING: shift/reduce conflict for LE in state 50 resolved as shift
WARNING: shift/reduce conflict for EQ in state 50 resolved as shift
WARNING: shift/reduce conflict for NE in state 50 resolved as shift
WARNING: shift/reduce conflict for + in state 51 resolved as shift
WARNING: shift/reduce conflict for - in state 51 resolved as shift
WARNING: shift/reduce conflict for * in state 51 resolved as shift
WARNING: shift/reduce conflict for / in state 51 resolved as shift
WARNING: shift/reduce conflict for ^ in state 51 resolved as shift
WARNING: shift/reduce conflict for GT in state 51 resolved as shift
WARNING: shift/reduce conflict for LT in state 51 resolved as shift
WARNING: shift/reduce conflict for GE in state 51 resolved as shift
WARNING: shift/reduce conflict for LE in state 51 resolved as shift
WARNING: shift/reduce conflict for EQ in state 51 resolved as shift
WARNING: shift/reduce conflict for NE in state 51 resolved as shift
WARNING: shift/reduce conflict for + in state 52 resolved as shift
WARNING: shift/reduce conflict for - in state 52 resolved as shift
WARNING: shift/reduce conflict for * in state 52 resolved as shift
WARNING: shift/reduce conflict for / in state 52 resolved as shift
WARNING: shift/reduce conflict for ^ in state 52 resolved as shift
WARNING: shift/reduce conflict for GT in state 52 resolved as shift
WARNING: shift/reduce conflict for LT in state 52 resolved as shift
WARNING: shift/reduce conflict for GE in state 52 resolved as shift
WARNING: shift/reduce conflict for LE in state 52 resolved as shift
WARNING: shift/reduce conflict for EQ in state 52 resolved as shift
WARNING: shift/reduce conflict for NE in state 52 resolved as shift
WARNING: shift/reduce conflict for + in state 53 resolved as shift
WARNING: shift/reduce conflict for - in state 53 resolved as shift
WARNING: shift/reduce conflict for * in state 53 resolved as shift
WARNING: shift/reduce conflict for / in state 53 resolved as shift
WARNING: shift/reduce conflict for ^ in state 53 resolved as shift
WARNING: shift/reduce conflict for GT in state 53 resolved as shift
WARNING: shift/reduce conflict for LT in state 53 resolved as shift
WARNING: shift/reduce conflict for GE in state 53 resolved as shift
WARNING: shift/reduce conflict for LE in state 53 resolved as shift
WARNING: shift/reduce conflict for EQ in state 53 resolved as shift
WARNING: shift/reduce conflict for NE in state 53 resolved as shift
WARNING: shift/reduce conflict for + in state 54 resolved as shift
WARNING: shift/reduce conflict for - in state 54 resolved as shift
WARNING: shift/reduce conflict for * in state 54 resolved as shift
WARNING: shift/reduce conflict for / in state 54 resolved as shift
WARNING: shift/reduce conflict for ^ in state 54 resolved as shift
WARNING: shift/reduce conflict for GT in state 54 resolved as shift
WARNING: shift/reduce conflict for LT in state 54 resolved as shift
WARNING: shift/reduce conflict for GE in state 54 resolved as shift
WARNING: shift/reduce conflict for LE in state 54 resolved as shift
WARNING: shift/reduce conflict for EQ in state 54 resolved as shift
WARNING: shift/reduce conflict for NE in state 54 resolved as shift
WARNING: shift/reduce conflict for + in state 55 resolved as shift
WARNING: shift/reduce conflict for - in state 55 resolved as shift
WARNING: shift/reduce conflict for * in state 55 resolved as shift
WARNING: shift/reduce conflict for / in state 55 resolved as shift
WARNING: shift/reduce conflict for ^ in state 55 resolved as shift
WARNING: shift/reduce conflict for GT in state 55 resolved as shift
WARNING: shift/reduce conflict for LT in state 55 resolved as shift
WARNING: shift/reduce conflict for GE in state 55 resolved as shift
WARNING: shift/reduce conflict for LE in state 55 resolved as shift
WARNING: shift/reduce conflict for EQ in state 55 resolved as shift
WARNING: shift/reduce conflict for NE in state 55 resolved as shift
WARNING: shift/reduce conflict for + in state 56 resolved as shift
WARNING: shift/reduce conflict for - in state 56 resolved as shift
WARNING: shift/reduce conflict for * in state 56 resolved as shift
WARNING: shift/reduce conflict for / in state 56 resolved as shift
WARNING: shift/reduce conflict for ^ in state 56 resolved as shift
WARNING: shift/reduce conflict for GT in state 56 resolved as shift
WARNING: shift/reduce conflict for LT in state 56 resolved as shift
WARNING: shift/reduce conflict for GE in state 56 resolved as shift
WARNING: shift/reduce conflict for LE in state 56 resolved as shift
WARNING: shift/reduce conflict for EQ in state 56 resolved as shift
WARNING: shift/reduce conflict for NE in state 56 resolved as shift
WARNING: shift/reduce conflict for + in state 57 resolved as shift
WARNING: shift/reduce conflict for - in state 57 resolved as shift
WARNING: shift/reduce conflict for * in state 57 resolved as shift
WARNING: shift/reduce conflict for / in state 57 resolved as shift
WARNING: shift/reduce conflict for ^ in state 57 resolved as shift
WARNING: shift/reduce conflict for GT in state 57 resolved as shift
WARNING: shift/reduce conflict for LT in state 57 resolved as shift
WARNING: shift/reduce conflict for GE in state 57 resolved as shift
WARNING: shift/reduce conflict for LE in state 57 resolved as shift
WARNING: shift/reduce conflict for EQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NE in state 57 resolved as shift
WARNING: shift/reduce conflict for + in state 58 resolved as shift
WARNING: shift/reduce conflict for - in state 58 resolved as shift
WARNING: shift/reduce conflict for * in state 58 resolved as shift
WARNING: shift/reduce conflict for / in state 58 resolved as shift
WARNING: shift/reduce conflict for ^ in state 58 resolved as shift
WARNING: shift/reduce conflict for GT in state 58 resolved as shift
WARNING: shift/reduce conflict for LT in state 58 resolved as shift
WARNING: shift/reduce conflict for GE in state 58 resolved as shift
WARNING: shift/reduce conflict for LE in state 58 resolved as shift
WARNING: shift/reduce conflict for EQ in state 58 resolved as shift
WARNING: shift/reduce conflict for NE in state 58 resolved as shift
WARNING: shift/reduce conflict for + in state 59 resolved as shift
WARNING: shift/reduce conflict for - in state 59 resolved as shift
WARNING: shift/reduce conflict for * in state 59 resolved as shift
WARNING: shift/reduce conflict for / in state 59 resolved as shift
WARNING: shift/reduce conflict for ^ in state 59 resolved as shift
WARNING: shift/reduce conflict for GT in state 59 resolved as shift
WARNING: shift/reduce conflict for LT in state 59 resolved as shift
WARNING: shift/reduce conflict for GE in state 59 resolved as shift
WARNING: shift/reduce conflict for LE in state 59 resolved as shift
WARNING: shift/reduce conflict for EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NE in state 59 resolved as shift
