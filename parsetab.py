
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BOOLDCL BOOLVAL BOOLVAL ELSE FLOATDCL FNUMBER IF INTDCL INUMBER NAME PRINTprog : stmtsstmts : statement stmts\n             | statement statement : INTDCL NAME ";" \n                 | INTDCL NAME "=" expression ";" statement : FLOATDCL NAME ";"statement : BOOLDCL NAME ";"statement : PRINT expression ";"statement : IF "(" boolexp ")" "{" stmts "}"statement : NAME "=" expression ";"expression : \'(\' expression \')\'expression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression \'^\' expressionexpression : INUMBERexpression : FNUMBERexpression : boolexpboolexp : BOOLVALexpression : NAME'
    
_lr_action_items = {'INTDCL':([0,3,23,26,27,28,37,45,46,48,],[4,4,-4,-6,-7,-8,-10,-5,4,-9,]),'FLOATDCL':([0,3,23,26,27,28,37,45,46,48,],[6,6,-4,-6,-7,-8,-10,-5,6,-9,]),'BOOLDCL':([0,3,23,26,27,28,37,45,46,48,],[7,7,-4,-6,-7,-8,-10,-5,7,-9,]),'PRINT':([0,3,23,26,27,28,37,45,46,48,],[8,8,-4,-6,-7,-8,-10,-5,8,-9,]),'IF':([0,3,23,26,27,28,37,45,46,48,],[9,9,-4,-6,-7,-8,-10,-5,9,-9,]),'NAME':([0,3,4,6,7,8,12,16,23,24,26,27,28,29,30,31,32,33,37,45,46,48,],[5,5,11,13,14,20,20,20,-4,20,-6,-7,-8,20,20,20,20,20,-10,-5,5,-9,]),'$end':([1,2,3,10,23,26,27,28,37,45,48,],[0,-1,-3,-2,-4,-6,-7,-8,-10,-5,-9,]),'}':([3,10,23,26,27,28,37,45,47,48,],[-3,-2,-4,-6,-7,-8,-10,-5,48,-9,]),'=':([5,11,],[12,24,]),'(':([8,9,12,16,24,29,30,31,32,33,],[16,22,16,16,16,16,16,16,16,16,]),'INUMBER':([8,12,16,24,29,30,31,32,33,],[17,17,17,17,17,17,17,17,17,]),'FNUMBER':([8,12,16,24,29,30,31,32,33,],[18,18,18,18,18,18,18,18,18,]),'BOOLVAL':([8,12,16,22,24,29,30,31,32,33,],[21,21,21,21,21,21,21,21,21,21,]),';':([11,13,14,15,17,18,19,20,21,25,36,38,39,40,41,42,43,],[23,26,27,28,-17,-18,-19,-21,-20,37,45,-12,-13,-14,-15,-16,-11,]),'+':([15,17,18,19,20,21,25,34,36,38,39,40,41,42,43,],[29,-17,-18,-19,-21,-20,29,29,29,29,29,29,29,29,-11,]),'-':([15,17,18,19,20,21,25,34,36,38,39,40,41,42,43,],[30,-17,-18,-19,-21,-20,30,30,30,30,30,30,30,30,-11,]),'*':([15,17,18,19,20,21,25,34,36,38,39,40,41,42,43,],[31,-17,-18,-19,-21,-20,31,31,31,31,31,31,31,31,-11,]),'/':([15,17,18,19,20,21,25,34,36,38,39,40,41,42,43,],[32,-17,-18,-19,-21,-20,32,32,32,32,32,32,32,32,-11,]),'^':([15,17,18,19,20,21,25,34,36,38,39,40,41,42,43,],[33,-17,-18,-19,-21,-20,33,33,33,33,33,33,33,33,-11,]),')':([17,18,19,20,21,34,35,38,39,40,41,42,43,],[-17,-18,-19,-21,-20,43,44,-12,-13,-14,-15,-16,-11,]),'{':([44,],[46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'stmts':([0,3,46,],[2,10,47,]),'statement':([0,3,46,],[3,3,3,]),'expression':([8,12,16,24,29,30,31,32,33,],[15,25,34,36,38,39,40,41,42,]),'boolexp':([8,12,16,22,24,29,30,31,32,33,],[19,19,19,35,19,19,19,19,19,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> stmts','prog',1,'p_prog','compi.py',90),
  ('stmts -> statement stmts','stmts',2,'p_statements_recursion','compi.py',97),
  ('stmts -> statement','stmts',1,'p_statements_recursion','compi.py',98),
  ('statement -> INTDCL NAME ;','statement',3,'p_dcl_declare_int','compi.py',108),
  ('statement -> INTDCL NAME = expression ;','statement',5,'p_dcl_declare_int','compi.py',109),
  ('statement -> FLOATDCL NAME ;','statement',3,'p_statement_declare_float','compi.py',128),
  ('statement -> BOOLDCL NAME ;','statement',3,'p_statement_declare_bool','compi.py',136),
  ('statement -> PRINT expression ;','statement',3,'p_statement_print','compi.py',144),
  ('statement -> IF ( boolexp ) { stmts }','statement',7,'p_statement_if','compi.py',151),
  ('statement -> NAME = expression ;','statement',4,'p_statement_assign','compi.py',161),
  ('expression -> ( expression )','expression',3,'p_expression_group','compi.py',180),
  ('expression -> expression + expression','expression',3,'p_expression_binop','compi.py',184),
  ('expression -> expression - expression','expression',3,'p_expression_binop','compi.py',185),
  ('expression -> expression * expression','expression',3,'p_expression_binop','compi.py',186),
  ('expression -> expression / expression','expression',3,'p_expression_binop','compi.py',187),
  ('expression -> expression ^ expression','expression',3,'p_expression_binop','compi.py',188),
  ('expression -> INUMBER','expression',1,'p_expression_inumber','compi.py',224),
  ('expression -> FNUMBER','expression',1,'p_expression_fnumber','compi.py',233),
  ('expression -> boolexp','expression',1,'p_expression_boolval','compi.py',241),
  ('boolexp -> BOOLVAL','boolexp',1,'p_bool_expression','compi.py',245),
  ('expression -> NAME','expression',1,'p_expression_name','compi.py',253),
]
