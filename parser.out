Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> stmts
Rule 2     stmts -> statement stmts
Rule 3     stmts -> statement
Rule 4     statement -> INTDCL NAME ;
Rule 5     statement -> INTDCL NAME = expression ;
Rule 6     statement -> FLOATDCL NAME ;
Rule 7     statement -> FLOATDCL NAME = expression ;
Rule 8     statement -> BOOLDCL NAME ;
Rule 9     statement -> BOOLDCL NAME = boolexp ;
Rule 10    statement -> WHILE ( boolexp ) { stmts }
Rule 11    statement -> PRINT expression ;
Rule 12    statement -> IF ( boolexp ) { stmts }
Rule 13    statement -> IF ( boolexp ) { stmts } ELSE { stmts }
Rule 14    statement -> NAME = expression ;
Rule 15    expression -> ( expression )
Rule 16    expression -> expression + expression
Rule 17    expression -> expression - expression
Rule 18    expression -> expression * expression
Rule 19    expression -> expression / expression
Rule 20    expression -> expression ^ expression
Rule 21    boolexp -> expression GT expression
Rule 22    boolexp -> expression LT expression
Rule 23    boolexp -> expression GE expression
Rule 24    boolexp -> expression LE expression
Rule 25    boolexp -> expression EQ expression
Rule 26    boolexp -> expression NE expression
Rule 27    boolexp -> boolexp AND boolexp
Rule 28    boolexp -> boolexp OR boolexp
Rule 29    expression -> INUMBER
Rule 30    expression -> FNUMBER
Rule 31    expression -> boolexp
Rule 32    boolexp -> BOOLVAL
Rule 33    expression -> NAME

Terminals, with rules where they appear

(                    : 10 12 13 15
)                    : 10 12 13 15
*                    : 18
+                    : 16
-                    : 17
/                    : 19
;                    : 4 5 6 7 8 9 11 14
=                    : 5 7 9 14
AND                  : 27
BOOLDCL              : 8 9
BOOLVAL              : 32
ELSE                 : 13
EQ                   : 25
FLOATDCL             : 6 7
FNUMBER              : 30
GE                   : 23
GT                   : 21
IF                   : 12 13
INTDCL               : 4 5
INUMBER              : 29
LE                   : 24
LT                   : 22
NAME                 : 4 5 6 7 8 9 14 33
NE                   : 26
OR                   : 28
PRINT                : 11
WHILE                : 10
^                    : 20
error                : 
{                    : 10 12 13 13
}                    : 10 12 13 13

Nonterminals, with rules where they appear

boolexp              : 9 10 12 13 27 27 28 28 31
expression           : 5 7 11 14 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26
prog                 : 0
statement            : 2 3
stmts                : 1 2 10 12 13 13

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . stmts
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . WHILE ( boolexp ) { stmts }
    (11) statement -> . PRINT expression ;
    (12) statement -> . IF ( boolexp ) { stmts }
    (13) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (14) statement -> . NAME = expression ;

    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    NAME            shift and go to state 5

    prog                           shift and go to state 1
    stmts                          shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> prog .



state 2

    (1) prog -> stmts .

    $end            reduce using rule 1 (prog -> stmts .)


state 3

    (2) stmts -> statement . stmts
    (3) stmts -> statement .
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . WHILE ( boolexp ) { stmts }
    (11) statement -> . PRINT expression ;
    (12) statement -> . IF ( boolexp ) { stmts }
    (13) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (14) statement -> . NAME = expression ;

    $end            reduce using rule 3 (stmts -> statement .)
    }               reduce using rule 3 (stmts -> statement .)
    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    NAME            shift and go to state 5

    statement                      shift and go to state 3
    stmts                          shift and go to state 11

state 4

    (4) statement -> INTDCL . NAME ;
    (5) statement -> INTDCL . NAME = expression ;

    NAME            shift and go to state 12


state 5

    (14) statement -> NAME . = expression ;

    =               shift and go to state 13


state 6

    (6) statement -> FLOATDCL . NAME ;
    (7) statement -> FLOATDCL . NAME = expression ;

    NAME            shift and go to state 14


state 7

    (8) statement -> BOOLDCL . NAME ;
    (9) statement -> BOOLDCL . NAME = boolexp ;

    NAME            shift and go to state 15


state 8

    (10) statement -> WHILE . ( boolexp ) { stmts }

    (               shift and go to state 16


state 9

    (11) statement -> PRINT . expression ;
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 17
    boolexp                        shift and go to state 21

state 10

    (12) statement -> IF . ( boolexp ) { stmts }
    (13) statement -> IF . ( boolexp ) { stmts } ELSE { stmts }

    (               shift and go to state 24


state 11

    (2) stmts -> statement stmts .

    $end            reduce using rule 2 (stmts -> statement stmts .)
    }               reduce using rule 2 (stmts -> statement stmts .)


state 12

    (4) statement -> INTDCL NAME . ;
    (5) statement -> INTDCL NAME . = expression ;

    ;               shift and go to state 25
    =               shift and go to state 26


state 13

    (14) statement -> NAME = . expression ;
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 27
    boolexp                        shift and go to state 21

state 14

    (6) statement -> FLOATDCL NAME . ;
    (7) statement -> FLOATDCL NAME . = expression ;

    ;               shift and go to state 28
    =               shift and go to state 29


state 15

    (8) statement -> BOOLDCL NAME . ;
    (9) statement -> BOOLDCL NAME . = boolexp ;

    ;               shift and go to state 30
    =               shift and go to state 31


state 16

    (10) statement -> WHILE ( . boolexp ) { stmts }
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME

    BOOLVAL         shift and go to state 23
    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22

    boolexp                        shift and go to state 32
    expression                     shift and go to state 33

state 17

    (11) statement -> PRINT expression . ;
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

    ;               shift and go to state 34
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 18

    (15) expression -> ( . expression )
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 46
    boolexp                        shift and go to state 21

state 19

    (29) expression -> INUMBER .

    ;               reduce using rule 29 (expression -> INUMBER .)
    +               reduce using rule 29 (expression -> INUMBER .)
    -               reduce using rule 29 (expression -> INUMBER .)
    *               reduce using rule 29 (expression -> INUMBER .)
    /               reduce using rule 29 (expression -> INUMBER .)
    ^               reduce using rule 29 (expression -> INUMBER .)
    GT              reduce using rule 29 (expression -> INUMBER .)
    LT              reduce using rule 29 (expression -> INUMBER .)
    GE              reduce using rule 29 (expression -> INUMBER .)
    LE              reduce using rule 29 (expression -> INUMBER .)
    EQ              reduce using rule 29 (expression -> INUMBER .)
    NE              reduce using rule 29 (expression -> INUMBER .)
    )               reduce using rule 29 (expression -> INUMBER .)
    AND             reduce using rule 29 (expression -> INUMBER .)
    OR              reduce using rule 29 (expression -> INUMBER .)


state 20

    (30) expression -> FNUMBER .

    ;               reduce using rule 30 (expression -> FNUMBER .)
    +               reduce using rule 30 (expression -> FNUMBER .)
    -               reduce using rule 30 (expression -> FNUMBER .)
    *               reduce using rule 30 (expression -> FNUMBER .)
    /               reduce using rule 30 (expression -> FNUMBER .)
    ^               reduce using rule 30 (expression -> FNUMBER .)
    GT              reduce using rule 30 (expression -> FNUMBER .)
    LT              reduce using rule 30 (expression -> FNUMBER .)
    GE              reduce using rule 30 (expression -> FNUMBER .)
    LE              reduce using rule 30 (expression -> FNUMBER .)
    EQ              reduce using rule 30 (expression -> FNUMBER .)
    NE              reduce using rule 30 (expression -> FNUMBER .)
    )               reduce using rule 30 (expression -> FNUMBER .)
    AND             reduce using rule 30 (expression -> FNUMBER .)
    OR              reduce using rule 30 (expression -> FNUMBER .)


state 21

    (31) expression -> boolexp .
    (27) boolexp -> boolexp . AND boolexp
    (28) boolexp -> boolexp . OR boolexp

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    ;               reduce using rule 31 (expression -> boolexp .)
    +               reduce using rule 31 (expression -> boolexp .)
    -               reduce using rule 31 (expression -> boolexp .)
    *               reduce using rule 31 (expression -> boolexp .)
    /               reduce using rule 31 (expression -> boolexp .)
    ^               reduce using rule 31 (expression -> boolexp .)
    GT              reduce using rule 31 (expression -> boolexp .)
    LT              reduce using rule 31 (expression -> boolexp .)
    GE              reduce using rule 31 (expression -> boolexp .)
    LE              reduce using rule 31 (expression -> boolexp .)
    EQ              reduce using rule 31 (expression -> boolexp .)
    NE              reduce using rule 31 (expression -> boolexp .)
    )               reduce using rule 31 (expression -> boolexp .)
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! AND             [ reduce using rule 31 (expression -> boolexp .) ]
  ! OR              [ reduce using rule 31 (expression -> boolexp .) ]


state 22

    (33) expression -> NAME .

    ;               reduce using rule 33 (expression -> NAME .)
    +               reduce using rule 33 (expression -> NAME .)
    -               reduce using rule 33 (expression -> NAME .)
    *               reduce using rule 33 (expression -> NAME .)
    /               reduce using rule 33 (expression -> NAME .)
    ^               reduce using rule 33 (expression -> NAME .)
    GT              reduce using rule 33 (expression -> NAME .)
    LT              reduce using rule 33 (expression -> NAME .)
    GE              reduce using rule 33 (expression -> NAME .)
    LE              reduce using rule 33 (expression -> NAME .)
    EQ              reduce using rule 33 (expression -> NAME .)
    NE              reduce using rule 33 (expression -> NAME .)
    )               reduce using rule 33 (expression -> NAME .)
    AND             reduce using rule 33 (expression -> NAME .)
    OR              reduce using rule 33 (expression -> NAME .)


state 23

    (32) boolexp -> BOOLVAL .

    AND             reduce using rule 32 (boolexp -> BOOLVAL .)
    OR              reduce using rule 32 (boolexp -> BOOLVAL .)
    ;               reduce using rule 32 (boolexp -> BOOLVAL .)
    +               reduce using rule 32 (boolexp -> BOOLVAL .)
    -               reduce using rule 32 (boolexp -> BOOLVAL .)
    *               reduce using rule 32 (boolexp -> BOOLVAL .)
    /               reduce using rule 32 (boolexp -> BOOLVAL .)
    ^               reduce using rule 32 (boolexp -> BOOLVAL .)
    GT              reduce using rule 32 (boolexp -> BOOLVAL .)
    LT              reduce using rule 32 (boolexp -> BOOLVAL .)
    GE              reduce using rule 32 (boolexp -> BOOLVAL .)
    LE              reduce using rule 32 (boolexp -> BOOLVAL .)
    EQ              reduce using rule 32 (boolexp -> BOOLVAL .)
    NE              reduce using rule 32 (boolexp -> BOOLVAL .)
    )               reduce using rule 32 (boolexp -> BOOLVAL .)


state 24

    (12) statement -> IF ( . boolexp ) { stmts }
    (13) statement -> IF ( . boolexp ) { stmts } ELSE { stmts }
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME

    BOOLVAL         shift and go to state 23
    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22

    boolexp                        shift and go to state 49
    expression                     shift and go to state 33

state 25

    (4) statement -> INTDCL NAME ; .

    INTDCL          reduce using rule 4 (statement -> INTDCL NAME ; .)
    FLOATDCL        reduce using rule 4 (statement -> INTDCL NAME ; .)
    BOOLDCL         reduce using rule 4 (statement -> INTDCL NAME ; .)
    WHILE           reduce using rule 4 (statement -> INTDCL NAME ; .)
    PRINT           reduce using rule 4 (statement -> INTDCL NAME ; .)
    IF              reduce using rule 4 (statement -> INTDCL NAME ; .)
    NAME            reduce using rule 4 (statement -> INTDCL NAME ; .)
    $end            reduce using rule 4 (statement -> INTDCL NAME ; .)
    }               reduce using rule 4 (statement -> INTDCL NAME ; .)


state 26

    (5) statement -> INTDCL NAME = . expression ;
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 50
    boolexp                        shift and go to state 21

state 27

    (14) statement -> NAME = expression . ;
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

    ;               shift and go to state 51
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 28

    (6) statement -> FLOATDCL NAME ; .

    INTDCL          reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    FLOATDCL        reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    BOOLDCL         reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    WHILE           reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    PRINT           reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    IF              reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    NAME            reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    $end            reduce using rule 6 (statement -> FLOATDCL NAME ; .)
    }               reduce using rule 6 (statement -> FLOATDCL NAME ; .)


state 29

    (7) statement -> FLOATDCL NAME = . expression ;
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 52
    boolexp                        shift and go to state 21

state 30

    (8) statement -> BOOLDCL NAME ; .

    INTDCL          reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    FLOATDCL        reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    BOOLDCL         reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    WHILE           reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    PRINT           reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    IF              reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    NAME            reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    $end            reduce using rule 8 (statement -> BOOLDCL NAME ; .)
    }               reduce using rule 8 (statement -> BOOLDCL NAME ; .)


state 31

    (9) statement -> BOOLDCL NAME = . boolexp ;
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME

    BOOLVAL         shift and go to state 23
    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22

    boolexp                        shift and go to state 53
    expression                     shift and go to state 33

state 32

    (10) statement -> WHILE ( boolexp . ) { stmts }
    (27) boolexp -> boolexp . AND boolexp
    (28) boolexp -> boolexp . OR boolexp
    (31) expression -> boolexp .

    )               shift and go to state 54
    AND             shift and go to state 47
    OR              shift and go to state 48
    GT              reduce using rule 31 (expression -> boolexp .)
    LT              reduce using rule 31 (expression -> boolexp .)
    GE              reduce using rule 31 (expression -> boolexp .)
    LE              reduce using rule 31 (expression -> boolexp .)
    EQ              reduce using rule 31 (expression -> boolexp .)
    NE              reduce using rule 31 (expression -> boolexp .)
    +               reduce using rule 31 (expression -> boolexp .)
    -               reduce using rule 31 (expression -> boolexp .)
    *               reduce using rule 31 (expression -> boolexp .)
    /               reduce using rule 31 (expression -> boolexp .)
    ^               reduce using rule 31 (expression -> boolexp .)


state 33

    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression

    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39


state 34

    (11) statement -> PRINT expression ; .

    INTDCL          reduce using rule 11 (statement -> PRINT expression ; .)
    FLOATDCL        reduce using rule 11 (statement -> PRINT expression ; .)
    BOOLDCL         reduce using rule 11 (statement -> PRINT expression ; .)
    WHILE           reduce using rule 11 (statement -> PRINT expression ; .)
    PRINT           reduce using rule 11 (statement -> PRINT expression ; .)
    IF              reduce using rule 11 (statement -> PRINT expression ; .)
    NAME            reduce using rule 11 (statement -> PRINT expression ; .)
    $end            reduce using rule 11 (statement -> PRINT expression ; .)
    }               reduce using rule 11 (statement -> PRINT expression ; .)


state 35

    (16) expression -> expression + . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 55
    boolexp                        shift and go to state 21

state 36

    (17) expression -> expression - . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 56
    boolexp                        shift and go to state 21

state 37

    (18) expression -> expression * . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 57
    boolexp                        shift and go to state 21

state 38

    (19) expression -> expression / . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 58
    boolexp                        shift and go to state 21

state 39

    (20) expression -> expression ^ . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 59
    boolexp                        shift and go to state 21

state 40

    (21) boolexp -> expression GT . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 60
    boolexp                        shift and go to state 21

state 41

    (22) boolexp -> expression LT . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 61
    boolexp                        shift and go to state 21

state 42

    (23) boolexp -> expression GE . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 62
    boolexp                        shift and go to state 21

state 43

    (24) boolexp -> expression LE . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 63
    boolexp                        shift and go to state 21

state 44

    (25) boolexp -> expression EQ . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 64
    boolexp                        shift and go to state 21

state 45

    (26) boolexp -> expression NE . expression
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL

    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22
    BOOLVAL         shift and go to state 23

    expression                     shift and go to state 65
    boolexp                        shift and go to state 21

state 46

    (15) expression -> ( expression . )
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

    )               shift and go to state 66
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 47

    (27) boolexp -> boolexp AND . boolexp
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME

    BOOLVAL         shift and go to state 23
    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22

    boolexp                        shift and go to state 67
    expression                     shift and go to state 33

state 48

    (28) boolexp -> boolexp OR . boolexp
    (21) boolexp -> . expression GT expression
    (22) boolexp -> . expression LT expression
    (23) boolexp -> . expression GE expression
    (24) boolexp -> . expression LE expression
    (25) boolexp -> . expression EQ expression
    (26) boolexp -> . expression NE expression
    (27) boolexp -> . boolexp AND boolexp
    (28) boolexp -> . boolexp OR boolexp
    (32) boolexp -> . BOOLVAL
    (15) expression -> . ( expression )
    (16) expression -> . expression + expression
    (17) expression -> . expression - expression
    (18) expression -> . expression * expression
    (19) expression -> . expression / expression
    (20) expression -> . expression ^ expression
    (29) expression -> . INUMBER
    (30) expression -> . FNUMBER
    (31) expression -> . boolexp
    (33) expression -> . NAME

    BOOLVAL         shift and go to state 23
    (               shift and go to state 18
    INUMBER         shift and go to state 19
    FNUMBER         shift and go to state 20
    NAME            shift and go to state 22

    boolexp                        shift and go to state 68
    expression                     shift and go to state 33

state 49

    (12) statement -> IF ( boolexp . ) { stmts }
    (13) statement -> IF ( boolexp . ) { stmts } ELSE { stmts }
    (27) boolexp -> boolexp . AND boolexp
    (28) boolexp -> boolexp . OR boolexp
    (31) expression -> boolexp .

    )               shift and go to state 69
    AND             shift and go to state 47
    OR              shift and go to state 48
    GT              reduce using rule 31 (expression -> boolexp .)
    LT              reduce using rule 31 (expression -> boolexp .)
    GE              reduce using rule 31 (expression -> boolexp .)
    LE              reduce using rule 31 (expression -> boolexp .)
    EQ              reduce using rule 31 (expression -> boolexp .)
    NE              reduce using rule 31 (expression -> boolexp .)
    +               reduce using rule 31 (expression -> boolexp .)
    -               reduce using rule 31 (expression -> boolexp .)
    *               reduce using rule 31 (expression -> boolexp .)
    /               reduce using rule 31 (expression -> boolexp .)
    ^               reduce using rule 31 (expression -> boolexp .)


state 50

    (5) statement -> INTDCL NAME = expression . ;
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

    ;               shift and go to state 70
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 51

    (14) statement -> NAME = expression ; .

    INTDCL          reduce using rule 14 (statement -> NAME = expression ; .)
    FLOATDCL        reduce using rule 14 (statement -> NAME = expression ; .)
    BOOLDCL         reduce using rule 14 (statement -> NAME = expression ; .)
    WHILE           reduce using rule 14 (statement -> NAME = expression ; .)
    PRINT           reduce using rule 14 (statement -> NAME = expression ; .)
    IF              reduce using rule 14 (statement -> NAME = expression ; .)
    NAME            reduce using rule 14 (statement -> NAME = expression ; .)
    $end            reduce using rule 14 (statement -> NAME = expression ; .)
    }               reduce using rule 14 (statement -> NAME = expression ; .)


state 52

    (7) statement -> FLOATDCL NAME = expression . ;
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

    ;               shift and go to state 71
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45


state 53

    (9) statement -> BOOLDCL NAME = boolexp . ;
    (27) boolexp -> boolexp . AND boolexp
    (28) boolexp -> boolexp . OR boolexp
    (31) expression -> boolexp .

    ;               shift and go to state 72
    AND             shift and go to state 47
    OR              shift and go to state 48
    GT              reduce using rule 31 (expression -> boolexp .)
    LT              reduce using rule 31 (expression -> boolexp .)
    GE              reduce using rule 31 (expression -> boolexp .)
    LE              reduce using rule 31 (expression -> boolexp .)
    EQ              reduce using rule 31 (expression -> boolexp .)
    NE              reduce using rule 31 (expression -> boolexp .)
    +               reduce using rule 31 (expression -> boolexp .)
    -               reduce using rule 31 (expression -> boolexp .)
    *               reduce using rule 31 (expression -> boolexp .)
    /               reduce using rule 31 (expression -> boolexp .)
    ^               reduce using rule 31 (expression -> boolexp .)


state 54

    (10) statement -> WHILE ( boolexp ) . { stmts }

    {               shift and go to state 73


state 55

    (16) expression -> expression + expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 16 (expression -> expression + expression .)
    )               reduce using rule 16 (expression -> expression + expression .)
    AND             reduce using rule 16 (expression -> expression + expression .)
    OR              reduce using rule 16 (expression -> expression + expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 16 (expression -> expression + expression .) ]
  ! -               [ reduce using rule 16 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 16 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 16 (expression -> expression + expression .) ]
  ! ^               [ reduce using rule 16 (expression -> expression + expression .) ]
  ! GT              [ reduce using rule 16 (expression -> expression + expression .) ]
  ! LT              [ reduce using rule 16 (expression -> expression + expression .) ]
  ! GE              [ reduce using rule 16 (expression -> expression + expression .) ]
  ! LE              [ reduce using rule 16 (expression -> expression + expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression + expression .) ]
  ! NE              [ reduce using rule 16 (expression -> expression + expression .) ]


state 56

    (17) expression -> expression - expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 17 (expression -> expression - expression .)
    )               reduce using rule 17 (expression -> expression - expression .)
    AND             reduce using rule 17 (expression -> expression - expression .)
    OR              reduce using rule 17 (expression -> expression - expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 17 (expression -> expression - expression .) ]
  ! -               [ reduce using rule 17 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 17 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 17 (expression -> expression - expression .) ]
  ! ^               [ reduce using rule 17 (expression -> expression - expression .) ]
  ! GT              [ reduce using rule 17 (expression -> expression - expression .) ]
  ! LT              [ reduce using rule 17 (expression -> expression - expression .) ]
  ! GE              [ reduce using rule 17 (expression -> expression - expression .) ]
  ! LE              [ reduce using rule 17 (expression -> expression - expression .) ]
  ! EQ              [ reduce using rule 17 (expression -> expression - expression .) ]
  ! NE              [ reduce using rule 17 (expression -> expression - expression .) ]


state 57

    (18) expression -> expression * expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 18 (expression -> expression * expression .)
    )               reduce using rule 18 (expression -> expression * expression .)
    AND             reduce using rule 18 (expression -> expression * expression .)
    OR              reduce using rule 18 (expression -> expression * expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 18 (expression -> expression * expression .) ]
  ! -               [ reduce using rule 18 (expression -> expression * expression .) ]
  ! *               [ reduce using rule 18 (expression -> expression * expression .) ]
  ! /               [ reduce using rule 18 (expression -> expression * expression .) ]
  ! ^               [ reduce using rule 18 (expression -> expression * expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression * expression .) ]
  ! LT              [ reduce using rule 18 (expression -> expression * expression .) ]
  ! GE              [ reduce using rule 18 (expression -> expression * expression .) ]
  ! LE              [ reduce using rule 18 (expression -> expression * expression .) ]
  ! EQ              [ reduce using rule 18 (expression -> expression * expression .) ]
  ! NE              [ reduce using rule 18 (expression -> expression * expression .) ]


state 58

    (19) expression -> expression / expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 19 (expression -> expression / expression .)
    )               reduce using rule 19 (expression -> expression / expression .)
    AND             reduce using rule 19 (expression -> expression / expression .)
    OR              reduce using rule 19 (expression -> expression / expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 19 (expression -> expression / expression .) ]
  ! -               [ reduce using rule 19 (expression -> expression / expression .) ]
  ! *               [ reduce using rule 19 (expression -> expression / expression .) ]
  ! /               [ reduce using rule 19 (expression -> expression / expression .) ]
  ! ^               [ reduce using rule 19 (expression -> expression / expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression / expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression / expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression / expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression / expression .) ]
  ! EQ              [ reduce using rule 19 (expression -> expression / expression .) ]
  ! NE              [ reduce using rule 19 (expression -> expression / expression .) ]


state 59

    (20) expression -> expression ^ expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    ;               reduce using rule 20 (expression -> expression ^ expression .)
    )               reduce using rule 20 (expression -> expression ^ expression .)
    AND             reduce using rule 20 (expression -> expression ^ expression .)
    OR              reduce using rule 20 (expression -> expression ^ expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! -               [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! *               [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! /               [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! ^               [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! GT              [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! LT              [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! GE              [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! LE              [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! EQ              [ reduce using rule 20 (expression -> expression ^ expression .) ]
  ! NE              [ reduce using rule 20 (expression -> expression ^ expression .) ]


state 60

    (21) boolexp -> expression GT expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    AND             reduce using rule 21 (boolexp -> expression GT expression .)
    OR              reduce using rule 21 (boolexp -> expression GT expression .)
    ;               reduce using rule 21 (boolexp -> expression GT expression .)
    )               reduce using rule 21 (boolexp -> expression GT expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! -               [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! *               [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! /               [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! ^               [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! GT              [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! LT              [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! GE              [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! LE              [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! EQ              [ reduce using rule 21 (boolexp -> expression GT expression .) ]
  ! NE              [ reduce using rule 21 (boolexp -> expression GT expression .) ]


state 61

    (22) boolexp -> expression LT expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    AND             reduce using rule 22 (boolexp -> expression LT expression .)
    OR              reduce using rule 22 (boolexp -> expression LT expression .)
    ;               reduce using rule 22 (boolexp -> expression LT expression .)
    )               reduce using rule 22 (boolexp -> expression LT expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! -               [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! *               [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! /               [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! ^               [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! GT              [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! LT              [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! GE              [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! LE              [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! EQ              [ reduce using rule 22 (boolexp -> expression LT expression .) ]
  ! NE              [ reduce using rule 22 (boolexp -> expression LT expression .) ]


state 62

    (23) boolexp -> expression GE expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    AND             reduce using rule 23 (boolexp -> expression GE expression .)
    OR              reduce using rule 23 (boolexp -> expression GE expression .)
    ;               reduce using rule 23 (boolexp -> expression GE expression .)
    )               reduce using rule 23 (boolexp -> expression GE expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! -               [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! *               [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! /               [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! ^               [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! GT              [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! LT              [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! GE              [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! LE              [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! EQ              [ reduce using rule 23 (boolexp -> expression GE expression .) ]
  ! NE              [ reduce using rule 23 (boolexp -> expression GE expression .) ]


state 63

    (24) boolexp -> expression LE expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    AND             reduce using rule 24 (boolexp -> expression LE expression .)
    OR              reduce using rule 24 (boolexp -> expression LE expression .)
    ;               reduce using rule 24 (boolexp -> expression LE expression .)
    )               reduce using rule 24 (boolexp -> expression LE expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! -               [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! *               [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! /               [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! ^               [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! GT              [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! LT              [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! GE              [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! LE              [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! EQ              [ reduce using rule 24 (boolexp -> expression LE expression .) ]
  ! NE              [ reduce using rule 24 (boolexp -> expression LE expression .) ]


state 64

    (25) boolexp -> expression EQ expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    AND             reduce using rule 25 (boolexp -> expression EQ expression .)
    OR              reduce using rule 25 (boolexp -> expression EQ expression .)
    ;               reduce using rule 25 (boolexp -> expression EQ expression .)
    )               reduce using rule 25 (boolexp -> expression EQ expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! -               [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! *               [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! /               [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! ^               [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! GT              [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! LT              [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! GE              [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! LE              [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! EQ              [ reduce using rule 25 (boolexp -> expression EQ expression .) ]
  ! NE              [ reduce using rule 25 (boolexp -> expression EQ expression .) ]


state 65

    (26) boolexp -> expression NE expression .
    (16) expression -> expression . + expression
    (17) expression -> expression . - expression
    (18) expression -> expression . * expression
    (19) expression -> expression . / expression
    (20) expression -> expression . ^ expression
    (21) boolexp -> expression . GT expression
    (22) boolexp -> expression . LT expression
    (23) boolexp -> expression . GE expression
    (24) boolexp -> expression . LE expression
    (25) boolexp -> expression . EQ expression
    (26) boolexp -> expression . NE expression

  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for ^ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    AND             reduce using rule 26 (boolexp -> expression NE expression .)
    OR              reduce using rule 26 (boolexp -> expression NE expression .)
    ;               reduce using rule 26 (boolexp -> expression NE expression .)
    )               reduce using rule 26 (boolexp -> expression NE expression .)
    +               shift and go to state 35
    -               shift and go to state 36
    *               shift and go to state 37
    /               shift and go to state 38
    ^               shift and go to state 39
    GT              shift and go to state 40
    LT              shift and go to state 41
    GE              shift and go to state 42
    LE              shift and go to state 43
    EQ              shift and go to state 44
    NE              shift and go to state 45

  ! +               [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! -               [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! *               [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! /               [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! ^               [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! GT              [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! LT              [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! GE              [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! LE              [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! EQ              [ reduce using rule 26 (boolexp -> expression NE expression .) ]
  ! NE              [ reduce using rule 26 (boolexp -> expression NE expression .) ]


state 66

    (15) expression -> ( expression ) .

    ;               reduce using rule 15 (expression -> ( expression ) .)
    +               reduce using rule 15 (expression -> ( expression ) .)
    -               reduce using rule 15 (expression -> ( expression ) .)
    *               reduce using rule 15 (expression -> ( expression ) .)
    /               reduce using rule 15 (expression -> ( expression ) .)
    ^               reduce using rule 15 (expression -> ( expression ) .)
    GT              reduce using rule 15 (expression -> ( expression ) .)
    LT              reduce using rule 15 (expression -> ( expression ) .)
    GE              reduce using rule 15 (expression -> ( expression ) .)
    LE              reduce using rule 15 (expression -> ( expression ) .)
    EQ              reduce using rule 15 (expression -> ( expression ) .)
    NE              reduce using rule 15 (expression -> ( expression ) .)
    )               reduce using rule 15 (expression -> ( expression ) .)
    AND             reduce using rule 15 (expression -> ( expression ) .)
    OR              reduce using rule 15 (expression -> ( expression ) .)


state 67

    (27) boolexp -> boolexp AND boolexp .
    (27) boolexp -> boolexp . AND boolexp
    (28) boolexp -> boolexp . OR boolexp
    (31) expression -> boolexp .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for GT resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for LT resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for GE resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for LE resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for EQ resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for NE resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for + resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for - resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for * resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for / resolved using rule 27 (boolexp -> boolexp AND boolexp .)
  ! reduce/reduce conflict for ^ resolved using rule 27 (boolexp -> boolexp AND boolexp .)
    ;               reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    +               reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    -               reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    *               reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    /               reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    ^               reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    GT              reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    LT              reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    GE              reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    LE              reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    EQ              reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    NE              reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    )               reduce using rule 27 (boolexp -> boolexp AND boolexp .)
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! AND             [ reduce using rule 27 (boolexp -> boolexp AND boolexp .) ]
  ! OR              [ reduce using rule 27 (boolexp -> boolexp AND boolexp .) ]
  ! GT              [ reduce using rule 31 (expression -> boolexp .) ]
  ! LT              [ reduce using rule 31 (expression -> boolexp .) ]
  ! GE              [ reduce using rule 31 (expression -> boolexp .) ]
  ! LE              [ reduce using rule 31 (expression -> boolexp .) ]
  ! EQ              [ reduce using rule 31 (expression -> boolexp .) ]
  ! NE              [ reduce using rule 31 (expression -> boolexp .) ]
  ! +               [ reduce using rule 31 (expression -> boolexp .) ]
  ! -               [ reduce using rule 31 (expression -> boolexp .) ]
  ! *               [ reduce using rule 31 (expression -> boolexp .) ]
  ! /               [ reduce using rule 31 (expression -> boolexp .) ]
  ! ^               [ reduce using rule 31 (expression -> boolexp .) ]


state 68

    (28) boolexp -> boolexp OR boolexp .
    (27) boolexp -> boolexp . AND boolexp
    (28) boolexp -> boolexp . OR boolexp
    (31) expression -> boolexp .

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! reduce/reduce conflict for GT resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for LT resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for GE resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for LE resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for EQ resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for NE resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for + resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for - resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for * resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for / resolved using rule 28 (boolexp -> boolexp OR boolexp .)
  ! reduce/reduce conflict for ^ resolved using rule 28 (boolexp -> boolexp OR boolexp .)
    ;               reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    +               reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    -               reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    *               reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    /               reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    ^               reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    GT              reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    LT              reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    GE              reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    LE              reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    EQ              reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    NE              reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    )               reduce using rule 28 (boolexp -> boolexp OR boolexp .)
    AND             shift and go to state 47
    OR              shift and go to state 48

  ! AND             [ reduce using rule 28 (boolexp -> boolexp OR boolexp .) ]
  ! OR              [ reduce using rule 28 (boolexp -> boolexp OR boolexp .) ]
  ! GT              [ reduce using rule 31 (expression -> boolexp .) ]
  ! LT              [ reduce using rule 31 (expression -> boolexp .) ]
  ! GE              [ reduce using rule 31 (expression -> boolexp .) ]
  ! LE              [ reduce using rule 31 (expression -> boolexp .) ]
  ! EQ              [ reduce using rule 31 (expression -> boolexp .) ]
  ! NE              [ reduce using rule 31 (expression -> boolexp .) ]
  ! +               [ reduce using rule 31 (expression -> boolexp .) ]
  ! -               [ reduce using rule 31 (expression -> boolexp .) ]
  ! *               [ reduce using rule 31 (expression -> boolexp .) ]
  ! /               [ reduce using rule 31 (expression -> boolexp .) ]
  ! ^               [ reduce using rule 31 (expression -> boolexp .) ]


state 69

    (12) statement -> IF ( boolexp ) . { stmts }
    (13) statement -> IF ( boolexp ) . { stmts } ELSE { stmts }

    {               shift and go to state 74


state 70

    (5) statement -> INTDCL NAME = expression ; .

    INTDCL          reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    FLOATDCL        reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    BOOLDCL         reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    WHILE           reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    PRINT           reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    IF              reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    NAME            reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    $end            reduce using rule 5 (statement -> INTDCL NAME = expression ; .)
    }               reduce using rule 5 (statement -> INTDCL NAME = expression ; .)


state 71

    (7) statement -> FLOATDCL NAME = expression ; .

    INTDCL          reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    FLOATDCL        reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    BOOLDCL         reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    WHILE           reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    PRINT           reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    IF              reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    NAME            reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    $end            reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)
    }               reduce using rule 7 (statement -> FLOATDCL NAME = expression ; .)


state 72

    (9) statement -> BOOLDCL NAME = boolexp ; .

    INTDCL          reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    FLOATDCL        reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    BOOLDCL         reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    WHILE           reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    PRINT           reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    IF              reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    NAME            reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    $end            reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)
    }               reduce using rule 9 (statement -> BOOLDCL NAME = boolexp ; .)


state 73

    (10) statement -> WHILE ( boolexp ) { . stmts }
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . WHILE ( boolexp ) { stmts }
    (11) statement -> . PRINT expression ;
    (12) statement -> . IF ( boolexp ) { stmts }
    (13) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (14) statement -> . NAME = expression ;

    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    NAME            shift and go to state 5

    stmts                          shift and go to state 75
    statement                      shift and go to state 3

state 74

    (12) statement -> IF ( boolexp ) { . stmts }
    (13) statement -> IF ( boolexp ) { . stmts } ELSE { stmts }
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . WHILE ( boolexp ) { stmts }
    (11) statement -> . PRINT expression ;
    (12) statement -> . IF ( boolexp ) { stmts }
    (13) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (14) statement -> . NAME = expression ;

    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    NAME            shift and go to state 5

    stmts                          shift and go to state 76
    statement                      shift and go to state 3

state 75

    (10) statement -> WHILE ( boolexp ) { stmts . }

    }               shift and go to state 77


state 76

    (12) statement -> IF ( boolexp ) { stmts . }
    (13) statement -> IF ( boolexp ) { stmts . } ELSE { stmts }

    }               shift and go to state 78


state 77

    (10) statement -> WHILE ( boolexp ) { stmts } .

    INTDCL          reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)
    FLOATDCL        reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)
    BOOLDCL         reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)
    WHILE           reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)
    PRINT           reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)
    IF              reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)
    NAME            reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)
    $end            reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)
    }               reduce using rule 10 (statement -> WHILE ( boolexp ) { stmts } .)


state 78

    (12) statement -> IF ( boolexp ) { stmts } .
    (13) statement -> IF ( boolexp ) { stmts } . ELSE { stmts }

    INTDCL          reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    FLOATDCL        reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    BOOLDCL         reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    WHILE           reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    PRINT           reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    IF              reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    NAME            reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    $end            reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    }               reduce using rule 12 (statement -> IF ( boolexp ) { stmts } .)
    ELSE            shift and go to state 79


state 79

    (13) statement -> IF ( boolexp ) { stmts } ELSE . { stmts }

    {               shift and go to state 80


state 80

    (13) statement -> IF ( boolexp ) { stmts } ELSE { . stmts }
    (2) stmts -> . statement stmts
    (3) stmts -> . statement
    (4) statement -> . INTDCL NAME ;
    (5) statement -> . INTDCL NAME = expression ;
    (6) statement -> . FLOATDCL NAME ;
    (7) statement -> . FLOATDCL NAME = expression ;
    (8) statement -> . BOOLDCL NAME ;
    (9) statement -> . BOOLDCL NAME = boolexp ;
    (10) statement -> . WHILE ( boolexp ) { stmts }
    (11) statement -> . PRINT expression ;
    (12) statement -> . IF ( boolexp ) { stmts }
    (13) statement -> . IF ( boolexp ) { stmts } ELSE { stmts }
    (14) statement -> . NAME = expression ;

    INTDCL          shift and go to state 4
    FLOATDCL        shift and go to state 6
    BOOLDCL         shift and go to state 7
    WHILE           shift and go to state 8
    PRINT           shift and go to state 9
    IF              shift and go to state 10
    NAME            shift and go to state 5

    stmts                          shift and go to state 81
    statement                      shift and go to state 3

state 81

    (13) statement -> IF ( boolexp ) { stmts } ELSE { stmts . }

    }               shift and go to state 82


state 82

    (13) statement -> IF ( boolexp ) { stmts } ELSE { stmts } .

    INTDCL          reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    FLOATDCL        reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    BOOLDCL         reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    WHILE           reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    PRINT           reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    IF              reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    NAME            reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    $end            reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)
    }               reduce using rule 13 (statement -> IF ( boolexp ) { stmts } ELSE { stmts } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 21 resolved as shift
WARNING: shift/reduce conflict for OR in state 21 resolved as shift
WARNING: shift/reduce conflict for + in state 55 resolved as shift
WARNING: shift/reduce conflict for - in state 55 resolved as shift
WARNING: shift/reduce conflict for * in state 55 resolved as shift
WARNING: shift/reduce conflict for / in state 55 resolved as shift
WARNING: shift/reduce conflict for ^ in state 55 resolved as shift
WARNING: shift/reduce conflict for GT in state 55 resolved as shift
WARNING: shift/reduce conflict for LT in state 55 resolved as shift
WARNING: shift/reduce conflict for GE in state 55 resolved as shift
WARNING: shift/reduce conflict for LE in state 55 resolved as shift
WARNING: shift/reduce conflict for EQ in state 55 resolved as shift
WARNING: shift/reduce conflict for NE in state 55 resolved as shift
WARNING: shift/reduce conflict for + in state 56 resolved as shift
WARNING: shift/reduce conflict for - in state 56 resolved as shift
WARNING: shift/reduce conflict for * in state 56 resolved as shift
WARNING: shift/reduce conflict for / in state 56 resolved as shift
WARNING: shift/reduce conflict for ^ in state 56 resolved as shift
WARNING: shift/reduce conflict for GT in state 56 resolved as shift
WARNING: shift/reduce conflict for LT in state 56 resolved as shift
WARNING: shift/reduce conflict for GE in state 56 resolved as shift
WARNING: shift/reduce conflict for LE in state 56 resolved as shift
WARNING: shift/reduce conflict for EQ in state 56 resolved as shift
WARNING: shift/reduce conflict for NE in state 56 resolved as shift
WARNING: shift/reduce conflict for + in state 57 resolved as shift
WARNING: shift/reduce conflict for - in state 57 resolved as shift
WARNING: shift/reduce conflict for * in state 57 resolved as shift
WARNING: shift/reduce conflict for / in state 57 resolved as shift
WARNING: shift/reduce conflict for ^ in state 57 resolved as shift
WARNING: shift/reduce conflict for GT in state 57 resolved as shift
WARNING: shift/reduce conflict for LT in state 57 resolved as shift
WARNING: shift/reduce conflict for GE in state 57 resolved as shift
WARNING: shift/reduce conflict for LE in state 57 resolved as shift
WARNING: shift/reduce conflict for EQ in state 57 resolved as shift
WARNING: shift/reduce conflict for NE in state 57 resolved as shift
WARNING: shift/reduce conflict for + in state 58 resolved as shift
WARNING: shift/reduce conflict for - in state 58 resolved as shift
WARNING: shift/reduce conflict for * in state 58 resolved as shift
WARNING: shift/reduce conflict for / in state 58 resolved as shift
WARNING: shift/reduce conflict for ^ in state 58 resolved as shift
WARNING: shift/reduce conflict for GT in state 58 resolved as shift
WARNING: shift/reduce conflict for LT in state 58 resolved as shift
WARNING: shift/reduce conflict for GE in state 58 resolved as shift
WARNING: shift/reduce conflict for LE in state 58 resolved as shift
WARNING: shift/reduce conflict for EQ in state 58 resolved as shift
WARNING: shift/reduce conflict for NE in state 58 resolved as shift
WARNING: shift/reduce conflict for + in state 59 resolved as shift
WARNING: shift/reduce conflict for - in state 59 resolved as shift
WARNING: shift/reduce conflict for * in state 59 resolved as shift
WARNING: shift/reduce conflict for / in state 59 resolved as shift
WARNING: shift/reduce conflict for ^ in state 59 resolved as shift
WARNING: shift/reduce conflict for GT in state 59 resolved as shift
WARNING: shift/reduce conflict for LT in state 59 resolved as shift
WARNING: shift/reduce conflict for GE in state 59 resolved as shift
WARNING: shift/reduce conflict for LE in state 59 resolved as shift
WARNING: shift/reduce conflict for EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NE in state 59 resolved as shift
WARNING: shift/reduce conflict for + in state 60 resolved as shift
WARNING: shift/reduce conflict for - in state 60 resolved as shift
WARNING: shift/reduce conflict for * in state 60 resolved as shift
WARNING: shift/reduce conflict for / in state 60 resolved as shift
WARNING: shift/reduce conflict for ^ in state 60 resolved as shift
WARNING: shift/reduce conflict for GT in state 60 resolved as shift
WARNING: shift/reduce conflict for LT in state 60 resolved as shift
WARNING: shift/reduce conflict for GE in state 60 resolved as shift
WARNING: shift/reduce conflict for LE in state 60 resolved as shift
WARNING: shift/reduce conflict for EQ in state 60 resolved as shift
WARNING: shift/reduce conflict for NE in state 60 resolved as shift
WARNING: shift/reduce conflict for + in state 61 resolved as shift
WARNING: shift/reduce conflict for - in state 61 resolved as shift
WARNING: shift/reduce conflict for * in state 61 resolved as shift
WARNING: shift/reduce conflict for / in state 61 resolved as shift
WARNING: shift/reduce conflict for ^ in state 61 resolved as shift
WARNING: shift/reduce conflict for GT in state 61 resolved as shift
WARNING: shift/reduce conflict for LT in state 61 resolved as shift
WARNING: shift/reduce conflict for GE in state 61 resolved as shift
WARNING: shift/reduce conflict for LE in state 61 resolved as shift
WARNING: shift/reduce conflict for EQ in state 61 resolved as shift
WARNING: shift/reduce conflict for NE in state 61 resolved as shift
WARNING: shift/reduce conflict for + in state 62 resolved as shift
WARNING: shift/reduce conflict for - in state 62 resolved as shift
WARNING: shift/reduce conflict for * in state 62 resolved as shift
WARNING: shift/reduce conflict for / in state 62 resolved as shift
WARNING: shift/reduce conflict for ^ in state 62 resolved as shift
WARNING: shift/reduce conflict for GT in state 62 resolved as shift
WARNING: shift/reduce conflict for LT in state 62 resolved as shift
WARNING: shift/reduce conflict for GE in state 62 resolved as shift
WARNING: shift/reduce conflict for LE in state 62 resolved as shift
WARNING: shift/reduce conflict for EQ in state 62 resolved as shift
WARNING: shift/reduce conflict for NE in state 62 resolved as shift
WARNING: shift/reduce conflict for + in state 63 resolved as shift
WARNING: shift/reduce conflict for - in state 63 resolved as shift
WARNING: shift/reduce conflict for * in state 63 resolved as shift
WARNING: shift/reduce conflict for / in state 63 resolved as shift
WARNING: shift/reduce conflict for ^ in state 63 resolved as shift
WARNING: shift/reduce conflict for GT in state 63 resolved as shift
WARNING: shift/reduce conflict for LT in state 63 resolved as shift
WARNING: shift/reduce conflict for GE in state 63 resolved as shift
WARNING: shift/reduce conflict for LE in state 63 resolved as shift
WARNING: shift/reduce conflict for EQ in state 63 resolved as shift
WARNING: shift/reduce conflict for NE in state 63 resolved as shift
WARNING: shift/reduce conflict for + in state 64 resolved as shift
WARNING: shift/reduce conflict for - in state 64 resolved as shift
WARNING: shift/reduce conflict for * in state 64 resolved as shift
WARNING: shift/reduce conflict for / in state 64 resolved as shift
WARNING: shift/reduce conflict for ^ in state 64 resolved as shift
WARNING: shift/reduce conflict for GT in state 64 resolved as shift
WARNING: shift/reduce conflict for LT in state 64 resolved as shift
WARNING: shift/reduce conflict for GE in state 64 resolved as shift
WARNING: shift/reduce conflict for LE in state 64 resolved as shift
WARNING: shift/reduce conflict for EQ in state 64 resolved as shift
WARNING: shift/reduce conflict for NE in state 64 resolved as shift
WARNING: shift/reduce conflict for + in state 65 resolved as shift
WARNING: shift/reduce conflict for - in state 65 resolved as shift
WARNING: shift/reduce conflict for * in state 65 resolved as shift
WARNING: shift/reduce conflict for / in state 65 resolved as shift
WARNING: shift/reduce conflict for ^ in state 65 resolved as shift
WARNING: shift/reduce conflict for GT in state 65 resolved as shift
WARNING: shift/reduce conflict for LT in state 65 resolved as shift
WARNING: shift/reduce conflict for GE in state 65 resolved as shift
WARNING: shift/reduce conflict for LE in state 65 resolved as shift
WARNING: shift/reduce conflict for EQ in state 65 resolved as shift
WARNING: shift/reduce conflict for NE in state 65 resolved as shift
WARNING: shift/reduce conflict for AND in state 67 resolved as shift
WARNING: shift/reduce conflict for OR in state 67 resolved as shift
WARNING: shift/reduce conflict for AND in state 68 resolved as shift
WARNING: shift/reduce conflict for OR in state 68 resolved as shift
WARNING: reduce/reduce conflict in state 67 resolved using rule (boolexp -> boolexp AND boolexp)
WARNING: rejected rule (expression -> boolexp) in state 67
WARNING: reduce/reduce conflict in state 68 resolved using rule (boolexp -> boolexp OR boolexp)
WARNING: rejected rule (expression -> boolexp) in state 68
